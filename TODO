
* Test Panel/Rows/Cols containing labels
* Test setting font and color on labels.
* Test setting bg and border on Screen, Panel, Rows, Cols, Labels.

* Make UI widget library
  * (ok) Panel (nestable/composable; no visible chrome by default; holds another elt)
    * (ok) Columns
  * VScroll Widget
    * Entry element
    * Scrollbar
  * Menu
    * Button
  * (ok) Text line
    * (ok) Str text line
    * (ok) Int text line
    * (ok) Float text line
  * (ok) All items can have border (square or rounded; viz on each side independently or full-around.)
  * All items can be shown inverted for focus
  * Add invalidateElem(UIWidget*) method to redraw only the components of the screen that
    get composited into the rect for that widget.
  * On first call to render(), do a setBoundingBox() on the top-level widget from Screen, to force it to
    cascadeBoundingBox() to everything in case we bound something out of order? This feels
    undependendable, like there should be a more resilient way to ensure that any widget hierarchy
    binding order triggers the appropriate cascadeBoundingBox() calls...


* Main UI
  * List all wifi channels in a scrollable thingie
  * Scroll thru the wifi channels
  * Select a wifi channel > See a detail page.

